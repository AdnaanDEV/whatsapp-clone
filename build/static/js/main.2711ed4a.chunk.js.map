{"version":3,"sources":["firebase.js","reducer.js","StateProvider.js","Chat.js","SidebarChat.js","Sidebar.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","initialState","user","actionTypes","reducer","state","action","type","payload","StateContext","createContext","StateProvider","children","useReducer","dispatch","Provider","value","Chat","React","useState","seed","setSeed","input","setInput","roomId","useParams","roomName","setRoomName","messages","setMessages","useContext","useEffect","Math","floor","random","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","className","Avatar","src","Date","length","timestamp","toDate","toUTCString","IconButton","message","displayName","onChange","e","target","placeholder","onClick","preventDefault","add","FieldValue","serverTimestamp","SidebarChat","id","addNewChat","prompt","to","Sidebar","rooms","setRooms","unsubscribe","photoURL","room","Login","Button","signInWithPopup","then","result","console","log","catch","err","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2711ed4a.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCZEtRZGMTadIyMWwZJA0zb2wb9LtDmriA\",\r\n    authDomain: \"whats-app-clone-81543.firebaseapp.com\",\r\n    databaseURL: \"https://whats-app-clone-81543.firebaseio.com\",\r\n    projectId: \"whats-app-clone-81543\",\r\n    storageBucket: \"whats-app-clone-81543.appspot.com\",\r\n    messagingSenderId: \"982085142836\",\r\n    appId: \"1:982085142836:web:00c8a35024d7b6c9673d61\",\r\n    measurementId: \"G-SZ3N9CPE5Q\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig) ;\r\n  const db = firebase.firestore()\r\n  const auth = firebase.auth()\r\n  const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {auth,provider} ;\r\n  export default db ;\r\n","export const initialState  = {\r\n    user: null\r\n}\r\n\r\nexport const actionTypes  = {\r\n    SET_USER:\"SET_USER\"\r\n}\r\n\r\nconst reducer = (state,action) =>{\r\n\r\n    switch (action.type){\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user:action.payload\r\n            }\r\n        default:\r\n            return state;    \r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","import React, { createContext, useReducer, useContext } from \"react\";\r\nimport reducer, { initialState } from \"./reducer\";\r\n\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ children }) => {\r\n    const [user,dispatch] = useReducer(reducer,initialState)\r\n  return(\r\n    <StateContext.Provider value={[user,dispatch]}>\r\n    {children}\r\n    </StateContext.Provider>\r\n  )\r\n  \r\n};\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import { Avatar, IconButton } from \"@material-ui/core\";\r\n\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport React from \"react\";\r\nimport \"./Chat.css\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport db from \"./firebase\";\r\nimport { StateContext } from \"./StateProvider\";\r\nimport firebase from \"firebase\";\r\n\r\nfunction Chat() {\r\n  const [seed, setSeed] = React.useState(\"\");\r\n  const [input, setInput] = React.useState(\"\");\r\n  const { roomId } = useParams();\r\n  const [roomName, setRoomName] = React.useState(\"\");\r\n  const [messages, setMessages] = React.useState([]);\r\n  const [user, dispatch] = React.useContext(StateContext);\r\n  React.useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (roomId) {\r\n      //Getting rooms name\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => setRoomName(snapshot.data().name));\r\n\r\n      // Getting all chats\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) => {\r\n          return setMessages(snapshot.docs.map((doc) => doc.data()));\r\n        });\r\n    }\r\n  }, [roomId]);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n      message: input,\r\n      name: user.user.displayName,\r\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n    });\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__header\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className=\"chat__headerInfo\">\r\n          <h3>{roomName}</h3>\r\n          <p> Last seen ... \r\n            {new Date(\r\n              messages[messages.length -1]?.\r\n              timestamp?.toDate()\r\n            ).toUTCString()}\r\n            \r\n             </p>\r\n        </div>\r\n\r\n        <div className=\"chat__headerRight\">\r\n          <IconButton>\r\n            <SearchIcon />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <AttachFileIcon />\r\n          </IconButton>\r\n\r\n          <IconButton>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"chat__body\">\r\n        {messages.map((message) => {\r\n          return (\r\n            <p className={`chat__message ${message.name === user.user.displayName && \"chat__receiver\"}  `}>\r\n              <span className=\"chat__name\">{message.name}</span>\r\n              {message.message}\r\n              <span className=\"chat__timestamp\">\r\n                {new Date(message.timestamp?.toDate()).toUTCString()}\r\n              </span>\r\n            </p>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <div className=\"chat__footer\">\r\n        <InsertEmoticonIcon />\r\n\r\n        <form>\r\n          <input\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Type a message\"\r\n            type=\"text\"\r\n          />\r\n          <button type=\"submit\" onClick={sendMessage}>\r\n            Send a message\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\nimport \"./SidebarChat.css\";\r\n\r\nimport db from \"./firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction SidebarChat({ id, name, addNewChat }) {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [messages, setMessages] = useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    if (id) {\r\n      db.collection(\"rooms\")\r\n        .doc(id)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) => {\r\n          setMessages(snapshot.docs.map((doc) => doc.data()));\r\n        });\r\n    }\r\n  }, [id]);\r\n\r\n  const createChat = () => {\r\n    const roomName = prompt(\"Enter room name\");\r\n\r\n    if (roomName) {\r\n      // do some clever database stuff\r\n\r\n      db.collection(\"rooms\").add({\r\n        // object add kar rahe hai\r\n        name: roomName,\r\n      });\r\n    }\r\n  };\r\n\r\n  return !addNewChat ? (\r\n    <Link to={`/rooms/${id}`}>\r\n      <div className=\"sidebarChat\">\r\n        <Avatar\r\n          src={`https://avatars.dicebear.com/api/avataaars/${seed}.svg`}\r\n        />\r\n\r\n        <div className=\"sidebarChat__info\">\r\n          <h2>{name}</h2>\r\n          <p>{messages[0]?.message}</p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  ) : (\r\n    <div onClick={createChat} className=\"sidebarChat\">\r\n      <h2>Add new chat</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarChat;\r\n","import React from \"react\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport \"./Sidebar.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport SidebarChat from \"./SidebarChat\";\r\n\r\n// importing firebase\r\nimport db from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Sidebar() {\r\n  const [rooms, setRooms] = React.useState([]);\r\n  const [{user},dispatch] = useStateValue()\r\n\r\n  React.useEffect(() => {\r\n    const unsubscribe = db.collection(\"rooms\").onSnapshot((snapshot) => {\r\n      setRooms(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      );\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__header\">\r\n        <Avatar src={user?.photoURL} />\r\n        <div className=\"sidebar__headerRight\">\r\n          <IconButton>\r\n            <DonutLargeIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <ChatIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sidebar__search\">\r\n        <div className=\"sidebar__searchContainer\">\r\n          <SearchIcon />\r\n          <input type=\"text\" placeholder=\"Search or start new chat !\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sidebar__chats\">\r\n        <SidebarChat addNewChat />\r\n        {rooms.map((room) => (\r\n          <SidebarChat\r\n            key={room.id}  // key is used for performance\r\n            id={room.id} \r\n            name={room.data.name}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"./Login.css\";\r\nimport {auth,provider} from \"./firebase\";\r\nimport { StateContext, useStateValue } from \"./StateProvider\";\r\nimport { actionTypes } from \"./reducer\";\r\n\r\nexport default function Login() {\r\n\r\n    // const [{},dispatch] = useStateValue() ; // shoot at data layer to update the value\r\n//    const [{},dispatch] = useStateValue()\r\n const [user,dispatch] = React.useContext(StateContext)\r\n\r\n  const signIn = () => {\r\n    auth\r\n    .signInWithPopup(provider)\r\n    .then((result)=>{\r\n      console.log(\"*******************&&&&&&&&&&&&&&&&&&&&&\")\r\n      console.log(result)\r\n        dispatch({\r\n            type:actionTypes.SET_USER,\r\n            payload:result.user\r\n        })\r\n    })\r\n    .catch((err)=>{\r\n        console.log(err)\r\n\r\n    })\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__container\">\r\n        <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/766px-WhatsApp.svg.png\"></img>\r\n\r\n        <div className=\"login__text\">\r\n          <h1>Sign in to whatsapp</h1>\r\n        </div>\r\n\r\n        <Button type=\"submit\" onClick={signIn}>\r\n          Sign In with google\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport React, { useState,useContext } from \"react\";\nimport \"./App.css\";\nimport Chat from \"./Chat\";\nimport Sidebar from \"./Sidebar\";\nimport Login from \"./Login\"\nimport { StateContext, useStateValue } from \"./StateProvider\";\n\nfunction App() {\n  // const [user, setUser] = useState(null);\n  // const [userState,dispatch] = useStateValue();\n  const [user,dispatch] = useContext(StateContext)\n  return (\n    // BEM naming convention\n    <div className=\"app\">\n\n      {!user.user ? (\n\n        <Login />\n      ) : (\n        <div className=\"app__body\">\n          <Router>\n            <Sidebar />\n            <Switch>\n              <Route path=\"/rooms/:roomId\">\n                <Chat />\n              </Route>\n\n              <Route path=\"/\">\n                <Chat />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport reducer , { initialState } from './reducer';\nimport { StateProvider } from './StateProvider';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState = {initialState} \n    reducer={reducer}\n    \n    >\n    <App />\n\n    </StateProvider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}